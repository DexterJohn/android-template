[versions]
agp = "8.2.0"
kotlin = "1.9.21"
kotlinxCoroutines = "1.8.0-RC2"
kotlinxSerialization = "1.6.2"
kotlinxDateTime = "0.5.0"

androidxActivity = "1.8.2"
androidxComposeCompiler = "1.5.7"
androidxComposeMaterial = "1.6.0-beta03"
androidxComposeMaterial3 = "1.2.0-beta01"
androidxComposeMaterial3Adaptive = "1.0.0-alpha03"
androidxComposeMaterial3AdaptiveNavigation = "1.0.0-alpha02"
androidxComposeUi = "1.6.0-beta03"
androidxDataStore = "1.0.0"
androidxHilt = "1.1.0"
androidxLifecycle = "2.7.0-rc02"
androidxNavigation = "2.7.6"
androidxRoom = "2.6.1"
androidxSplashScreen = "1.0.1"
androidxStartup = "1.1.1"
androidxWindow = "1.2.0"
androidxWork = "2.9.0"

assertk = "0.28.0"
autonomousappsDependencyAnalysis = "1.28.0"
coil = "2.5.0"
desugarJdkLibs = "2.0.4"
detekt = "1.23.4"
dbtools = "8.3.0"

firebaseBom = "32.7.0"
firebaseAppDistGradlePlugin = "4.0.1"
firebaseCrashlyticsGradlePlugin = "2.9.9"
firebasePerfGradlePlugin = "1.4.2"

googlePlayCore = "1.8.1"
googleServicesGradlePlugin = "4.4.0"

hilt = "2.50"
jacoco = "0.8.8"
junit = "5.10.1"
kermit = "2.0.2"
ksp = "1.9.21-1.0.15"
ktor = "3.0.0-beta-1"
leakCanary = "2.12"
licenseManagerGradlePlugin = "1.3.0"
mockK = "1.13.8"
okhttp = "4.12.0"
okio = "3.7.0"
playPublisher = "3.8.6"
ruler = "1.4.0"
sqliteJdbc = "3.44.1.0"
turbine = "1.0.0"
versionsGradlePlugin = "0.50.0"
workManagerTools = "4.0.0"

[plugins]
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
#playPublisher = { id = "com.github.triplet.play", version.ref = "playPublisher" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

[libraries]
android-gradlePluginClasspath = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-desugar = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "desugarJdkLibs" }

androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidxActivity" }
androidx-datastorePrefs = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDataStore" }
androidx-startup = { module = "androidx.startup:startup-runtime", version.ref = "androidxStartup" }

androidx-hilt-compiler = { module = "androidx.hilt:hilt-compiler", version.ref = "androidxHilt" }
androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidxHilt" }
androidx-hilt-work = { module = "androidx.hilt:hilt-work", version.ref = "androidxHilt" }

androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycle" }

androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }

androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidxRoom" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
androidx-room-testing = { module = "androidx.room:room-testing", version.ref = "androidxRoom" }

androidx-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidxSplashScreen" }

androidx-window = { module = "androidx.window:window", version.ref = "androidxWindow" }

androidx-work-runtime = { module = "androidx.work:work-runtime-ktx", version.ref = "androidxWork" }
androidx-work-gcm = { module = "androidx.work:work-gcm", version.ref = "androidxWork" }

assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }

coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }

compose-material-iconsext = { module = "androidx.compose.material:material-icons-extended", version.ref = "androidxComposeMaterial" } # Material design icons (extended)
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidxComposeMaterial3" }
compose-material3-adaptive = { group = "androidx.compose.material3", name = "material3-adaptive-android", version.ref = "androidxComposeMaterial3Adaptive" }
compose-material3-adaptive-navigation = { module = "androidx.compose.material3:material3-adaptive-navigation-suite", version.ref = "androidxComposeMaterial3AdaptiveNavigation" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidxComposeUi" }
compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidxComposeUi" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidxComposeUi" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidxComposeUi" } # Tooling support (Previews, etc.)
compose-material3-windowsize = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "androidxComposeMaterial3" }

dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "hilt" }

dbtools-licenseManager-gradlePluginClasspath = { module = "org.dbtools:license-manager-gradle-plugin", version.ref = "licenseManagerGradlePlugin" }

dbtools-room = { module = "org.dbtools:dbtools-room", version.ref = "dbtools" }
dbtools-roomSqlite = { module = "org.dbtools:dbtools-room-sqliteorg", version.ref = "dbtools" }
dbtools-roomJdbc = { module = "org.dbtools:dbtools-room-jdbc", version.ref = "dbtools" }
dbtools-roomJdbcTest = { module = "org.dbtools:dbtools-room-jdbc-test", version.ref = "dbtools" }

google-servicesgradlePluginClasspath = { module = "com.google.gms:google-services", version.ref = "googleServicesGradlePlugin" }

# Firebase - https://firebase.google.com/support/release-notes/android
google-firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
google-firebase-appDistGradlePluginClasspath = { module = "com.google.firebase:firebase-appdistribution-gradle", version.ref = "firebaseAppDistGradlePlugin" }
google-firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
google-firebase-config = { module = "com.google.firebase:firebase-config" }
google-firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
google-firebase-crashlyticsGradlePluginClasspath = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsGradlePlugin" }
google-firebase-perf = { module = "com.google.firebase:firebase-perf" }
google-firebase-perfGradlePluginClasspath = { module = "com.google.firebase:perf-plugin", version.ref = "firebasePerfGradlePlugin" }

google-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
google-hilt-gradlePluginClasspath = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "hilt" }
google-hilt-library = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
google-hilt-testing = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt" }

google-play-core = { module = "com.google.android.play:core-ktx", version.ref = "googlePlayCore" } # https://developer.android.com/reference/com/google/android/play/core/release-notes

junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine" }

kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
kermit-crashlytics = { module = "co.touchlab:kermit-crashlytics", version.ref = "kermit" }

kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlin-coroutines-playServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinxCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlin-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
kotlin-gradlePluginClasspath = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp" }
okhttp = { module = "com.squareup.okhttp3:okhttp" }
okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okio-assetfilesystem = { module = "com.squareup.okio:okio-assetfilesystem", version.ref = "okio" }

mockK = { module = "io.mockk:mockk", version.ref = "mockK" }

playPublisherGradlePluginClasspath = { module = "com.github.triplet.gradle:play-publisher", version.ref = "playPublisher" }

ruler-gradlePluginClasspath = { module = "com.spotify.ruler:ruler-gradle-plugin", version.ref = "ruler" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

gradleVersions-gradlePluginClasspath = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "versionsGradlePlugin" }

workmanagertools = { module = "org.dbtools:workmanager-tools", version.ref = "workManagerTools" }

xerial-sqlite = { module = "org.xerial:sqlite-jdbc", version.ref = "sqliteJdbc" }
